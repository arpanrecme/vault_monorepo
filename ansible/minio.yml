- name: Get Server Information
  hosts: minio
  gather_facts: true
  become: true
  vars_files:
    - "{{ playbook_dir }}/vars/main.yml"
  tasks:
    - name: Ensure group "somegroup" exists
      ansible.builtin.group:
        name: "{{ vault_mono_server_minio_group }}"
        system: true
    - name: Ensure group "somegroup" exists
      ansible.builtin.user:
        name: "{{ vault_mono_server_minio_user }}"
        system: true
        create_home: true
        home: "{{ vault_mono_server_minio_dir }}"
        group: "{{ vault_mono_server_minio_group }}"
        shell: /bin/bash

    - name: director
      ansible.builtin.file:
        state: directory
        path: "{{ vault_mono_server_minio_dir }}"
        owner: "{{ vault_mono_server_minio_user }}"
        group: "{{ vault_mono_server_minio_group }}"
    - name: Download bin
      when: false
      ansible.builtin.get_url:
        url: https://dl.min.io/server/minio/release/linux-amd64/minio
        mode: "0755"
        owner: "{{ vault_mono_server_minio_user }}"
        group: "{{ vault_mono_server_minio_group }}"
        dest: "{{ vault_mono_server_minio_dir }}/minio"

    - name: Download bin
      ansible.builtin.copy:
        src: "{{ vault_mono_local_files_dir }}/minio"
        mode: "0755"
        owner: "{{ vault_mono_server_minio_user }}"
        group: "{{ vault_mono_server_minio_group }}"
        dest: "{{ vault_mono_server_minio_dir }}/minio"

    - name: Download mc bin
      ansible.builtin.copy:
        src: "{{ vault_mono_local_files_dir }}/mc"
        mode: "0755"
        owner: "{{ vault_mono_server_minio_user }}"
        group: "{{ vault_mono_server_minio_group }}"
        dest: "{{ vault_mono_server_minio_dir }}/mc"

    - name: Get stats of a minio env
      ansible.builtin.stat:
        path: /etc/default/minio
      register: stminio

    - name: env
      when: not stminio.stat.exists
      ansible.builtin.template:
        src: "{{ vault_mono_local_templates_dir }}/minio-env.js"
        dest: "/etc/default/minio"
        mode: "0644"

    - name: Store file into /tmp/fetched/host.example.com/tmp/somefile
      ansible.builtin.fetch:
        src: /etc/default/minio
        dest: "{{ vault_mono_envfile_local_download_temp_path }}"
        flat: true

    - name: minio creds
      ansible.builtin.set_fact:
        minio_access_key: "{{ lookup('ansible.builtin.ini', 'MINIO_ROOT_USER', type='properties', file=vault_mono_envfile_local_download_temp_path) }}"
        minio_access_secret: "{{ lookup('ansible.builtin.ini', 'MINIO_ROOT_PASSWORD', type='properties', file=vault_mono_envfile_local_download_temp_path) }}"
    # - name: Store file into /tmp/fetched/host.example.com/tmp/somefile
    #   ansible.builtin.slurp:
    #     src: "/etc/default/minio"
    #   register: mountsminio

    # - name: write to local
    #   delegate_to: localhost
    #   become: false
    #   ansible.builtin.copy:
    #     content: "{{ mountsminio['content'] | b64decode }}"
    #     dest: "{{ vault_mono_envfile_local_download_temp_path }}"

    - name: systemd
      ansible.builtin.template:
        src: "{{ vault_mono_local_templates_dir }}/minio-service.j2"
        dest: "/etc/systemd/system/minio.service"
        mode: "0644"

    - name: Vault Monorepo | Setup Vault Server | Handlers | Restart Vault
      ansible.builtin.service:
        name: minio
        state: "{{ item }}"
      with_items:
      #  - reloaded
        - restarted

    - ansible.builtin.debug:
        var: "{{ item }}"
      with_items:
        - minio_access_key
        - minio_access_secret

    - name: create bucket
      become: false
      delegate_to: localhost
      amazon.aws.aws_s3:
        bucket: mybucket
        mode: create
        permission: public-read
        aws_access_key: "{{ minio_access_key }}"
        aws_secret_key: "{{ minio_access_secret }}"
        s3_url: http://192.168.77.143:9000
        region: us-east-1
        permission: private
