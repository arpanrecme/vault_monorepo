- name: Get Server Information
  hosts: minio
  gather_facts: true
  become: true
  vars_files:
    - "{{ playbook_dir }}/vars/main.yml"
  tasks:
    - name: Vault Monorepo | Minio | Get global configuration
      run_once: true
      ansible.builtin.set_fact:
        vault_mono_global_config: "{{ lookup('ansible.builtin.file', vault_mono_local_file_global_config) | from_json }}"

    - name: Get Keyy
      become: false
      delegate_to: localhost
      amazon.aws.aws_s3:
        bucket: terraform
        mode: put
        object: /my/desired/key.txt
        src: ../.tmp/secrets.minio.existing.tmp.properties
        # dest: .tmp/abc
        aws_access_key: dU0jM2RPKmFVWVlI
        aws_secret_key: VGtVMWtMITQubyFnRT4pIXdHSGVHQTJ0dmxWMFUkQTFSP3YreEhMVUd9MjMkOVdf
        s3_url: "https://{{ vault_mono_global_config.S3.SERVER_DOMAIN_NAME }}:{{ vault_mono_global_config.S3.SERVER_PORT }}"
        region: "{{ vault_mono_global_config.S3.REGION }}"
        permission: private
        validate_certs: true
        aws_ca_bundle: "{{ vault_mono_local_file_root_ca_certificate }}"
        encrypt: false
      register: fasfas
      ignore_errors: true

    - ansible.builtin.debug:
        var: fasfas

    - ansible.builtin.fail:
        msg: hard

    - name: create bucket
      become: false
      delegate_to: localhost
      amazon.aws.aws_s3:
        bucket: terraform
        mode: create
        aws_access_key: dU0jM2RPKmFVWVlI
        aws_secret_key: VGtVMWtMITQubyFnRT4pIXdHSGVHQTJ0dmxWMFUkQTFSP3YreEhMVUd9MjMkOVdf
        s3_url: "https://{{ vault_mono_global_config.S3.SERVER_DOMAIN_NAME }}:{{ vault_mono_global_config.S3.SERVER_PORT }}"
        region: "{{ vault_mono_global_config.S3.REGION }}"
        permission: private
        validate_certs: true
        aws_ca_bundle: "{{ vault_mono_local_file_root_ca_certificate }}"
