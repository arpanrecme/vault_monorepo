---
- name: Vault Monorepo | Bitwarden | OPENSSH PRIVATE KEY
  no_log: "{{ vault_mono_debug_no_log }}"
  block:
    - name: Vault Monorepo | Bitwarden | OPENSSH PRIVATE KEY | Download Private key
      ansible.builtin.shell: |-
        bw get attachment id_rsa \
        --itemid $(bw get item 'OPENSSH PRIVATE KEY' --raw | jq .id -r) \
        --output "{{ vault_mono_local_file_openssh_private_key }}"
        chmod 600 "{{ vault_mono_local_file_openssh_private_key }}"
      args:
        creates: "{{ vault_mono_local_file_openssh_private_key }}"

    - name: Vault Monorepo | Bitwarden | OPENSSH PRIVATE KEY | Download Public key
      ansible.builtin.shell: |-
        bw get attachment id_rsa.pub \
        --itemid $(bw get item 'OPENSSH PRIVATE KEY' --raw | jq .id -r) \
        --output {{ vault_mono_local_file_openssh_public_key }}
        chmod 600 {{ vault_mono_local_file_openssh_public_key }}
      args:
        creates: "{{ vault_mono_local_file_openssh_public_key }}"

- name: Vault Monorepo | Bitwarden | Linode api token
  no_log: "{{ vault_mono_debug_no_log }}"
  ansible.builtin.shell: >
    bw get item 'Linode' --raw |
    jq '.fields |
    .[] |
    select(.name == "LINODE_CLI_PROD_TOKEN") |
    .value' -r > {{ vault_mono_local_file_linode_cli_prod_token }}
  args:
    creates: "{{ vault_mono_local_file_linode_cli_prod_token }}"

- name: Vault Monorepo | Bitwarden | ROOT CA
  no_log: "{{ vault_mono_debug_no_log }}"
  block:
    - name: Vault Monorepo | Bitwarden | ROOT CA | Download Private key
      ansible.builtin.shell: |-
        bw get attachment own_ca_root.key \
        --itemid $(bw get item 'CA ROOT' --raw | jq .id -r) \
        --output "{{ vault_mono_local_file_root_ca_private_key }}"
      args:
        creates: "{{ vault_mono_local_file_root_ca_private_key }}"

    - name: Vault Monorepo | Bitwarden | ROOT CA | Download Certificate
      ansible.builtin.shell: |-
        bw get attachment own_ca_root.cert \
        --itemid $(bw get item 'CA ROOT' --raw | jq .id -r) \
        --output "{{ vault_mono_local_file_root_ca_certificate }}"
      args:
        creates: "{{ vault_mono_local_file_root_ca_certificate }}"

- name: Vault Monorepo | Bitwarden | Gitlab
  no_log: "{{ vault_mono_debug_no_log }}"
  block:
    - name: Vault Monorepo | Bitwarden | Gitlab Username
      ansible.builtin.shell: >
        bw get username 'Gitlab' --raw > {{ vault_mono_local_file_gitlab_username }}
      args:
        creates: "{{ vault_mono_local_file_gitlab_username }}"

    - name: Vault Monorepo | Bitwarden | Gitlab GL_PROD_API_KEY
      ansible.builtin.shell: >
        bw get item 'Gitlab' --raw |
        jq '.fields |
        .[] |
        select(.name == "GL_PROD_API_KEY") |
        .value' -r > {{ vault_mono_local_file_gitlab_gl_prod_api_key }}
      args:
        creates: "{{ vault_mono_local_file_gitlab_gl_prod_api_key }}"

- name: Vault Monorepo | Bitwarden | Github
  no_log: "{{ vault_mono_debug_no_log }}"
  block:
    - name: Vault Monorepo | Bitwarden | Github | Username
      ansible.builtin.shell: >
        bw get username 'Github' --raw > {{ vault_mono_local_file_github_username }}
      args:
        creates: "{{ vault_mono_local_file_github_username }}"

    - name: Vault Monorepo | Bitwarden | Github | GH_PROD_API_TOKEN
      ansible.builtin.shell: >
        bw get item 'Github' --raw |
        jq '.fields |
        .[] |
        select(.name == "GH_PROD_API_TOKEN") |
        .value' -r > {{ vault_mono_local_file_github_gh_prod_api_key }}
      args:
        creates: "{{ vault_mono_local_file_github_gh_prod_api_key }}"

- name: Vault Monorepo | Bitwarden | Ansible Galaxy API Key
  no_log: "{{ vault_mono_debug_no_log }}"
  ansible.builtin.shell: >
    bw get item 'Ansible galaxy' --raw |
    jq '.fields |
    .[] |
    select(.name == "GALAXY_API_KEY") |
    .value' -r > {{ vault_mono_local_file_ansible_galaxy_api_key }}
  args:
    creates: "{{ vault_mono_local_file_ansible_galaxy_api_key }}"

- name: Vault Monorepo | Bitwarden | HashiCorp Terraform cloud API Token
  no_log: "{{ vault_mono_debug_no_log }}"
  ansible.builtin.shell: >
    bw get item 'HashiCorp Terraform cloud' --raw |
    jq '.fields |
    .[] |
    select(.name == "TF_PROD_TOKEN") |
    .value' -r > {{ vault_mono_local_file_terraform_cloud_tf_prod_token }}
  args:
    creates: "{{ vault_mono_local_file_terraform_cloud_tf_prod_token }}"
