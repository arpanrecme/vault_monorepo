---
- name: Vault Monorepo | Minio | Create group {{ vault_mono_server_minio_group }}
  ansible.builtin.group:
    name: "{{ vault_mono_server_minio_group }}"
    system: true

- name: Vault Monorepo | Minio | Create user {{ vault_mono_server_minio_user }}
  ansible.builtin.user:
    name: "{{ vault_mono_server_minio_user }}"
    system: true
    create_home: true
    home: "{{ vault_mono_server_minio_dir }}"
    group: "{{ vault_mono_server_minio_group }}"
    shell: /bin/zsh
  register: vault_mono_server_minio_homedir_result

- name: Vault Monorepo | Minio | Create zshrc file
  ansible.builtin.file:
    group: "{{ vault_mono_server_minio_group }}"
    path: "{{ vault_mono_server_minio_homedir_result.home }}/.zshrc"
    owner: "{{ vault_mono_server_minio_user }}"
    mode: "0644"
    state: touch

- name: Vault Monorepo | Minio | Create directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ vault_mono_server_minio_user }}"
    group: "{{ vault_mono_server_minio_group }}"
    mode: "0750"
  with_items:
    - "{{ vault_mono_server_minio_certs_dir }}"
    - "{{ vault_mono_server_minio_dir }}"
    - "{{ vault_mono_server_minio_bin_dir }}"
    - "{{ vault_mono_server_minio_volumes }}"

- name: Vault Monorepo | Minio | Download bin {{ vault_mono_minio_download_url }}
  ansible.builtin.get_url:
    url: "{{ vault_mono_minio_download_url }}"
    mode: "0755"
    owner: "{{ vault_mono_server_minio_user }}"
    group: "{{ vault_mono_server_minio_group }}"
    dest: "{{ vault_mono_server_minio_server_bin_path }}"

- name: Vault Monorepo | Minio | Create environment file
  ansible.builtin.template:
    src: "{{ vault_mono_local_templates_dir }}/minio-env.js"
    dest: "{{ vault_mono_server_minio_server_env_file_path }}"
    mode: "0644"
    owner: "{{ vault_mono_server_minio_user }}"
    group: "{{ vault_mono_server_minio_group }}"

- name: Vault Monorepo | Minio | Get existing environment file
  ansible.builtin.fetch:
    src: "{{ vault_mono_server_minio_server_env_file_path }}"
    dest: "{{ vault_mono_envfile_local_download_temp_path }}"
    flat: true

- name: Vault Monorepo | Minio | Server TLS Certificate | Get IP Address from DNS
  ansible.builtin.set_fact:
    vault_mono_server_minio_dig: "{{ lookup('community.general.dig', vault_mono_global_config.S3.SERVER_DOMAIN_NAME) }}"

- name: Vault Monorepo | Minio | Server TLS Certificate | Get Public IP Address
  ansible.builtin.uri:
    url: https://ifconfig.me/all.json
  register: vault_mono_server_minio_ifconfig_me

- name: Vault Monorepo | Minio | Server TLS Certificate | Generate an OpenSSL private key for tls_key_file
  community.crypto.openssl_privatekey:
    path: "{{ vault_mono_server_minio_cert_private_key_path }}"
    owner: "{{ vault_mono_server_minio_user }}"
    group: "{{ vault_mono_server_minio_group }}"
    mode: "0400"

- name: Vault Monorepo | Minio | Server TLS Certificate | Check existing certificate file for tls_cert_file
  ansible.builtin.stat:
    path: "{{ vault_mono_server_minio_cert_path }}"
  register: vault_mono_server_minio_certificate_file_stat

- name: Vault Monorepo | Minio | Server TLS Certificate | Get information on generated certificate for tls_cert_file
  when: vault_mono_server_minio_certificate_file_stat.stat.exists
  community.crypto.x509_certificate_info:
    path: "{{ vault_mono_server_minio_cert_path }}"
    valid_at:
      point_1: "+1d"
  register: vault_mono_server_minio_x509_certificate_info
  ignore_errors: true

- name: Vault Monorepo | Minio | Server TLS Certificate | Generate an OpenSSL Certificate Signing Request for tls_cert_file
  when: >
    (
      not vault_mono_server_minio_certificate_file_stat.stat.exists
    )
    or
    (
      vault_mono_server_minio_x509_certificate_info.valid_at is defined
      and
      (
        (
          not vault_mono_server_minio_x509_certificate_info.valid_at.point_1
        )
        or
        (
          vault_mono_server_minio_x509_certificate_info.subject.commonName != vault_mono_global_config.S3.SERVER_DOMAIN_NAME
        )
      )
    )
    or
    (
      vault_mono_server_minio_x509_certificate_info.failed is defined and vault_mono_server_minio_x509_certificate_info.failed
    )
  community.crypto.openssl_csr_pipe:
    privatekey_path: "{{ vault_mono_server_minio_cert_private_key_path }}"
    common_name: "{{ vault_mono_global_config.S3.SERVER_DOMAIN_NAME }}"
    subject_alt_name:
      - "DNS:{{ vault_mono_global_config.S3.SERVER_DOMAIN_NAME }}"
      - "IP:{{ vault_mono_server_minio_dig }}"
      - "IP:{{ vault_mono_server_minio_ifconfig_me.json.ip_addr }}"
    subject_alt_name_critical: true
    basic_constraints: CA:FALSE
    basic_constraints_critical: true
    key_usage:
      - digitalSignature
      - nonRepudiation
      - keyEncipherment
      - dataEncipherment
      - keyCertSign
      - cRLSign
    key_usage_critical: true
    extended_key_usage:
      - serverAuth
    extended_key_usage_critical: true
  register: vault_mono_server_minio_openssl_csr_pipe

- name: Vault Monorepo | Minio | Server TLS Certificate | Generate an OpenSSL certificate signed with your own CA certificate
  when: vault_mono_server_minio_openssl_csr_pipe.csr is defined
  community.crypto.x509_certificate_pipe:
    csr_content: "{{ vault_mono_server_minio_openssl_csr_pipe.csr }}"
    ownca_content: "{{ lookup('ansible.builtin.file', vault_mono_local_file_root_ca_certificate) }}"
    ownca_privatekey_content: "{{ lookup('ansible.builtin.file', vault_mono_local_file_root_ca_private_key) }}"
    ownca_privatekey_passphrase: "{{ lookup('ansible.builtin.file', vault_mono_local_file_root_ca_private_key_passphrase) }}"
    provider: ownca
    ownca_not_after: "+30d"
  register: vault_mono_server_minio_x509_certificate_pipe

- name: Vault Monorepo | Minio | Server TLS Certificate | Set certificate chain
  when: vault_mono_server_minio_x509_certificate_pipe.certificate is defined
  ansible.builtin.set_fact:
    vault_mono_server_minio_chain_x509_certificate: |+
      {{ vault_mono_server_minio_x509_certificate_pipe.certificate | trim }}
      {{ lookup('ansible.builtin.file', vault_mono_local_file_root_ca_certificate) }}

- name: Vault Monorepo | Minio | Server TLS Certificate | Write Certificate Chain To File
  when: vault_mono_server_minio_x509_certificate_pipe.certificate is defined
  ansible.builtin.copy:
    content: "{{ vault_mono_server_minio_chain_x509_certificate }}"
    dest: "{{ vault_mono_server_minio_cert_path }}"
    owner: "{{ vault_mono_server_minio_user }}"
    group: "{{ vault_mono_server_minio_group }}"
    mode: "0400"

- name: Vault Monorepo | Minio | Create systemd file
  ansible.builtin.template:
    src: "{{ vault_mono_local_templates_dir }}/minio-service.j2"
    dest: "{{ vault_mono_server_systemd_service_file_path }}"
    mode: "0644"

- name: Vault Monorepo | Minio | Restart minio
  ansible.builtin.service:
    name: "{{ vault_mono_server_systemd_name }}"
    state: restarted

- name: Vault Monorepo | Minio | Read credentials from fetched file
  no_log: "{{ vault_mono_debug_no_log }}"
  ansible.builtin.set_fact:
    minio_access_key: "{{ lookup('ansible.builtin.ini', 'MINIO_ROOT_USER', type='properties', file=vault_mono_envfile_local_download_temp_path) }}"
    minio_access_secret: "{{ lookup('ansible.builtin.ini', 'MINIO_ROOT_PASSWORD', type='properties', file=vault_mono_envfile_local_download_temp_path) }}"
