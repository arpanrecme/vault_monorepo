---
- name: Vault Monorepo | Get Server Information | Get Prerequisite Files | Bitwarden
  block:
    - name: Vault Monorepo | Get Server Information | Get Prerequisite Files | Bitwarden | OPENSSH PRIVATE KEY
      no_log: "{{ vault_mono_debug_no_log }}"
      block:
        - name: Vault Monorepo | Get Server Information | Get Prerequisite Files | Bitwarden | OPENSSH PRIVATE KEY | Download Private key
          ansible.builtin.shell: |-
            bw get attachment id_rsa \
            --itemid $(bw get item 'Nu4xUoniFGACilNjH9RB+3M1p4UoX8S71DVpPhZOBJ0' \
            --raw | jq .id -r) \
            --output "{{ vault_mono_prerequisite_local_file_openssh_private_key }}"
            chmod 400 "{{ vault_mono_prerequisite_local_file_openssh_private_key }}"
          args:
            creates: "{{ vault_mono_prerequisite_local_file_openssh_private_key }}"

        - name: Vault Monorepo | Get Server Information | Get Prerequisite Files | Bitwarden | OPENSSH PRIVATE KEY | Get private key passphrase
          ansible.builtin.shell: |-
            bw get password 'Nu4xUoniFGACilNjH9RB+3M1p4UoX8S71DVpPhZOBJ0' > {{ vault_mono_prerequisite_local_file_openssh_passphrase_private_key }}
          args:
            creates: "{{ vault_mono_prerequisite_local_file_openssh_passphrase_private_key }}"

    - name: Vault Monorepo | Get Server Information | Get Prerequisite Files | Bitwarden | Linode api token
      no_log: "{{ vault_mono_debug_no_log }}"
      ansible.builtin.shell: >
        bw get item 'Linode' --raw |
        jq '.fields |
        .[] |
        select(.name == "LINODE_CLI_PROD_TOKEN") |
        .value' -r > {{ vault_mono_prerequisite_local_file_linode_cli_prod_token }}
      args:
        creates: "{{ vault_mono_prerequisite_local_file_linode_cli_prod_token }}"

    - name: Vault Monorepo | Get Server Information | Get Prerequisite Files | Bitwarden | ROOT CA
      no_log: "{{ vault_mono_debug_no_log }}"
      block:
        - name: Vault Monorepo | Get Server Information | Get Prerequisite Files | Bitwarden | ROOT CA | Download Private Key
          ansible.builtin.shell: |-
            bw get attachment key.pem \
            --itemid $(bw get item '16:73:5a:f9:ed:ae:aa:98:26:cb:cc:0c:f2:9b:29:ec:88:4c:4b:e9' --raw | jq .id -r) \
            --output "{{ vault_mono_prerequisite_local_file_root_ca_private_key }}"
          args:
            creates: "{{ vault_mono_prerequisite_local_file_root_ca_private_key }}"

        - name: Vault Monorepo | Get Server Information | Get Prerequisite Files | Bitwarden | ROOT CA | Download Certificate
          ansible.builtin.shell: |-
            bw get attachment cert_full_chain.pem \
            --itemid $(bw get item '16:73:5a:f9:ed:ae:aa:98:26:cb:cc:0c:f2:9b:29:ec:88:4c:4b:e9' --raw | jq .id -r) \
            --output "{{ vault_mono_prerequisite_local_file_root_ca_certificate }}"
          args:
            creates: "{{ vault_mono_prerequisite_local_file_root_ca_certificate }}"

        - name: Vault Monorepo | Get Server Information | Get Prerequisite Files | Bitwarden | ROOT CA | Get private key passphrase
          ansible.builtin.shell: |-
            bw get password \
             '16:73:5a:f9:ed:ae:aa:98:26:cb:cc:0c:f2:9b:29:ec:88:4c:4b:e9' > {{ vault_mono_prerequisite_local_file_root_ca_passphrase_private_key }}
          args:
            creates: "{{ vault_mono_prerequisite_local_file_root_ca_passphrase_private_key }}"

    - name: Vault Monorepo | Get Server Information | Get Prerequisite Files | Bitwarden | Gitlab GL_PROD_API_KEY
      no_log: "{{ vault_mono_debug_no_log }}"
      ansible.builtin.shell: >
        bw get item 'Gitlab' --raw |
        jq '.fields |
        .[] |
        select(.name == "GL_PROD_API_KEY") |
        .value' -r > {{ vault_mono_prerequisite_local_file_gitlab_gl_prod_api_key }}
      args:
        creates: "{{ vault_mono_prerequisite_local_file_gitlab_gl_prod_api_key }}"

    - name: Vault Monorepo | Get Server Information | Get Prerequisite Files | Bitwarden | Github GH_PROD_API_TOKEN
      no_log: "{{ vault_mono_debug_no_log }}"
      ansible.builtin.shell: >
        bw get item 'Github' --raw |
        jq '.fields |
        .[] |
        select(.name == "GH_PROD_API_TOKEN") |
        .value' -r > {{ vault_mono_prerequisite_local_file_github_gh_prod_api_token }}
      args:
        creates: "{{ vault_mono_prerequisite_local_file_github_gh_prod_api_token }}"

    - name: Vault Monorepo | Get Server Information | Get Prerequisite Files | Bitwarden | Ansible Galaxy API Key
      no_log: "{{ vault_mono_debug_no_log }}"
      ansible.builtin.shell: >
        bw get item 'Ansible galaxy' --raw |
        jq '.fields |
        .[] |
        select(.name == "GALAXY_API_KEY") |
        .value' -r > {{ vault_mono_prerequisite_local_file_ansible_galaxy_api_key }}
      args:
        creates: "{{ vault_mono_prerequisite_local_file_ansible_galaxy_api_key }}"

    - name: Vault Monorepo | Get Server Information | Get Prerequisite Files | Bitwarden | HashiCorp Terraform Cloud API Token
      no_log: "{{ vault_mono_debug_no_log }}"
      ansible.builtin.shell: >
        bw get item 'HashiCorp Terraform cloud' --raw |
        jq '.fields |
        .[] |
        select(.name == "TF_PROD_TOKEN") |
        .value' -r > {{ vault_mono_prerequisite_local_file_terraform_cloud_tf_prod_token }}
      args:
        creates: "{{ vault_mono_prerequisite_local_file_terraform_cloud_tf_prod_token }}"

    - name: Vault Monorepo | Get Server Information | Get Prerequisite Files | Bitwarden | Vault GSuite OIDC File
      ansible.builtin.shell: |-
        bw get attachment vault_gsuite_oidc_auth_configuration.json \
        --itemid $(bw get item 'Workspace Admin' --raw | jq .id -r) \
        --output "{{ vault_mono_prerequisite_local_file_vault_jwt_auth_backend_oidc_gsuite_admin }}"
      args:
        creates: "{{ vault_mono_prerequisite_local_file_vault_jwt_auth_backend_oidc_gsuite_admin }}"

    - name: Vault Monorepo | Get Server Information | Get Prerequisite Files | Bitwarden | Remove empty lines from files
      ansible.builtin.replace:
        path: "{{ item }}"
        regexp: '(\n\s*$)'
        replace: ""
        mode: "600"
      with_items:
        - "{{ vault_mono_prerequisite_local_file_linode_cli_prod_token }}"
        - "{{ vault_mono_prerequisite_local_file_gitlab_gl_prod_api_key }}"
        - "{{ vault_mono_prerequisite_local_file_github_gh_prod_api_token }}"
        - "{{ vault_mono_prerequisite_local_file_ansible_galaxy_api_key }}"
        - "{{ vault_mono_prerequisite_local_file_terraform_cloud_tf_prod_token }}"

- name: Vault Monorepo | Get Server Information | Get Prerequisite Files | Remove Password from OPENSSH PRIVATE KEY
  ansible.builtin.shell: |+
    cp {{ vault_mono_prerequisite_local_file_openssh_private_key }} {{ vault_mono_prerequisite_local_file_openssh_nopass_private_key }}
    chmod 600 {{ vault_mono_prerequisite_local_file_openssh_nopass_private_key }}
    ssh-keygen -p \
      -P {{ lookup('ansible.builtin.file', vault_mono_prerequisite_local_file_openssh_passphrase_private_key) }} \
      -N '' -f {{ vault_mono_prerequisite_local_file_openssh_nopass_private_key }}
  args:
    creates: "{{ vault_mono_prerequisite_local_file_openssh_nopass_private_key }}"

# TODO: Remove empty line at end of file
- name: Vault Monorepo | Get Server Information | Get Prerequisite Files | Create Openssh Public key
  ansible.builtin.shell: |-
    __public_key=$(ssh-keygen -y -f {{ vault_mono_prerequisite_local_file_openssh_nopass_private_key }})
    echo -n "${__public_key}" > {{ vault_mono_prerequisite_local_file_openssh_public_key }}
    chmod 400 {{ vault_mono_prerequisite_local_file_openssh_public_key }}
  args:
    creates: "{{ vault_mono_prerequisite_local_file_openssh_public_key }}"

- name: Vault Monorepo | Get Server Information | Get Prerequisite Files | Remove Password from ROOT CA Private Key
  ansible.builtin.shell: |+
    openssl rsa -in {{ vault_mono_prerequisite_local_file_root_ca_private_key }} \
        -passin pass:{{ lookup('ansible.builtin.file', vault_mono_prerequisite_local_file_root_ca_passphrase_private_key) }} \
        -passout pass:"" \
        -out {{ vault_mono_prerequisite_local_file_root_ca_no_pass_private_key }}
  args:
    creates: "{{ vault_mono_prerequisite_local_file_root_ca_no_pass_private_key }}"
