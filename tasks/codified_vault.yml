---
- name: Vault Monorepo | Configure Vault | Terraform Codified Vault | Terraform Cloud Backend | Get Backend config
  ansible.builtin.set_fact:
    vault_mono_codified_vault_tmp_backend:
      "{{ lookup('hcl2json', \
      path=vault_mono_codified_vault_local_file_tfbackend) }}"

- name: Vault Monorepo | Configure Vault | Terraform Codified Vault | Terraform Cloud Backend | Get Backend Workspace Name
  ansible.builtin.set_fact:
    vault_mono_codified_vault_tmp_workspace_backend: "{{ vault_mono_codified_vault_tmp_backend.terraform.backend.remote.workspaces.name }}"

- name: Vault Monorepo | Configure Vault | Terraform Codified Vault | Terraform Cloud Backend | Create Remote Backend
  terraform_cloud_workspace:
    token: "{{ lookup('ansible.builtin.file', vault_mono_prerequisite_local_file_terraform_cloud_tf_prod_token) }}"
    organization: "{{ vault_mono_tfe_org_name }}"
    organization_attributes:
      email: "{{ vault_mono_tfe_org_email }}"
      "collaborator-auth-policy": "{{ vault_mono_tfe_org_collaborator_auth_policy }}"
    workspace: "{{ vault_mono_codified_vault_tmp_workspace_backend }}"
    workspace_attributes:
      "allow-destroy-plan": True
      "auto-apply": "{{ vault_mono_tfe_org_workspace_auto_apply }}"
      "execution-mode": "{{ vault_mono_tfe_org_workspace_execution_mode }}"
    hostname: "{{ vault_mono_tfe_hostname }}"

- name: Vault Monorepo | Configure Vault | Terraform Codified Vault | Generate Root
  no_log: "{{ vault_mono_debug_no_log }}"
  vault_sys_generate_root:
    unseal_keys: "{{ vault_mono_init_unseal_fact_init_secrets['keys'] }}"
    vault_addr:
      "{{ vault_mono_global_config.VAULT.PROTOCOL }}://{{ vault_mono_global_config.VAULT.FQDN }}:\
      {{ vault_mono_global_config.VAULT.PORT }}"
    vault_client_cert: "{{ vault_mono_local_file_client_certificate }}"
    vault_client_key: "{{ vault_mono_local_file_client_private_key }}"
    vault_capath: "{{ vault_mono_prerequisite_local_file_root_ca_certificate }}"
    cancel_root_generation: true
    calculate_new_root: true
  register: vault_mono_codified_vault_tmp_root_token

- name: Vault Monorepo | Configure Vault | Terraform Codified Vault | Terraform Apply
  no_log: "{{ vault_mono_debug_no_log }}"
  community.general.terraform:
    project_path: "{{ vault_mono_codified_vault_dir }}"
    state: present
    force_init: true
    backend_config:
      hostname: "{{ vault_mono_tfe_hostname }}"
      organization: "{{ vault_mono_tfe_org_name }}"
      token: "{{ lookup('ansible.builtin.file', vault_mono_prerequisite_local_file_terraform_cloud_tf_prod_token) }}"
    # backend_config_files:
    #   - "{{ vault_mono_codified_vault_local_file_tfbackend }}"
  environment:
    TF_VAR_VAULT_MONO_ENDPOINT_GLOBAL_CONFIG: "{{ vault_mono_endpoint_global_config }}"
    TF_VAR_VAULT_MONO_VAULT_ROOT_TOKEN: "{{ vault_mono_codified_vault_tmp_root_token.new_root }}"
    TF_VAR_VAULT_MONO_LOCAL_FILE_CLIENT_PRIVATE_KEY: "{{ vault_mono_local_file_client_private_key }}"
    TF_VAR_VAULT_MONO_LOCAL_FILE_CLIENT_CHAIN_CERTIFICATE: "{{ vault_mono_local_file_client_chain_certificate }}"
    # prerequisite
    ## Linode
    TF_VAR_VAULT_MONO_PREREQUISITE_LOCAL_FILE_LINODE_CLI_PROD_TOKEN: "{{ vault_mono_prerequisite_local_file_linode_cli_prod_token }}"
    ## Linode
    ## ROOT CA
    TF_VAR_VAULT_MONO_PREREQUISITE_LOCAL_FILE_ROOT_CA_NO_PASS_PRIVATE_KEY: "{{ vault_mono_prerequisite_local_file_root_ca_no_pass_private_key }}"
    TF_VAR_VAULT_MONO_PREREQUISITE_LOCAL_FILE_ROOT_CA_CERTIFICATE: "{{ vault_mono_prerequisite_local_file_root_ca_certificate }}"
    ## ROOT CA
    ## GITLAB
    TF_VAR_VAULT_MONO_PREREQUISITE_LOCAL_FILE_GITLAB_GL_PROD_API_KEY: "{{ vault_mono_prerequisite_local_file_gitlab_gl_prod_api_key }}"
    ## GITLAB
    ## GITHUB
    TF_VAR_VAULT_MONO_PREREQUISITE_LOCAL_FILE_GITHUB_GH_PROD_API_TOKEN: "{{ vault_mono_prerequisite_local_file_github_gh_prod_api_token }}"
    ## GITHUB
    ## Ansible Galaxy
    TF_VAR_VAULT_MONO_PREREQUISITE_LOCAL_FILE_ANSIBLE_GALAXY_API_KEY: "{{ vault_mono_prerequisite_local_file_ansible_galaxy_api_key }}"
    ## Ansible Galaxy
    ## Terraform Cloud
    TF_VAR_VAULT_MONO_PREREQUISITE_LOCAL_FILE_TERRAFORM_CLOUD_TF_PROD_TOKEN: "{{ vault_mono_prerequisite_local_file_terraform_cloud_tf_prod_token }}"
    ## Terraform Cloud
    ## GSUITE OIDC
    TF_VAR_VAULT_MONO_PREREQUISITE_LOCAL_FILE_VAULT_JWT_AUTH_BACKEND_OIDC_GSUITE_ADMIN: "{{ vault_mono_prerequisite_local_file_vault_jwt_auth_backend_oidc_gsuite_admin }}"
    ## GSUITE OIDC
  register: vault_mono_codified_vault_tmp_output
  ignore_errors: true

- name: Vault Monorepo | Configure Vault | Terraform Codified Vault | Revoke Root Token
  no_log: "{{ vault_mono_debug_no_log }}"
  environment: # https://stackoverflow.com/questions/47890394/ansible-uri-module-with-cacert-option
    SSL_CERT_FILE: "{{ vault_mono_prerequisite_local_file_root_ca_certificate }}"
  ansible.builtin.uri:
    url:
      "{{ vault_mono_global_config.VAULT.PROTOCOL }}://{{ vault_mono_global_config.VAULT.FQDN }}:\
      {{ vault_mono_global_config.VAULT.PORT }}/v1/auth/token/revoke-self"
    method: POST
    # ca_path: "{{ vault_mono_prerequisite_local_file_root_ca_certificate }}"
    client_cert: "{{ vault_mono_local_file_client_certificate }}"
    client_key: "{{ vault_mono_local_file_client_private_key }}"
    status_code: [204, 403]
    validate_certs: true
    return_content: true
    headers:
      "X-Vault-Token": "{{ vault_mono_codified_vault_tmp_root_token.new_root }}"
  register: vault_mono_codified_vault_tmp_remove_root_token
  changed_when: vault_mono_codified_vault_tmp_remove_root_token.status == 204

- name: Vault Monorepo | Configure Vault | Terraform Codified Vault | Terraform Error
  when: vault_mono_codified_vault_tmp_output.failed
  ansible.builtin.debug:
    msg: "{{ item | regex_replace('\\u001b.*0m', '') | trim }}"
  changed_when: vault_mono_codified_vault_tmp_output.changed
  with_items:
    - "{{ vault_mono_codified_vault_tmp_output.stdout_lines | default(omit) }}"
    - "{{ vault_mono_codified_vault_tmp_output.stderr_lines | default(omit) }}"
    - "{{ vault_mono_codified_vault_tmp_output.msg | default(omit) }}"

- name: Vault Monorepo | Configure Vault | Terraform Codified Vault | Terraform Fail
  when: vault_mono_codified_vault_tmp_output.failed
  ansible.builtin.fail:
    msg: "Terraform Apply Failed, Check above errors"
