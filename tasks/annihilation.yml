---
- name: Vault Monorepo | Annihilation | Delete Init secrets | Gitlab
  block:
    - name: Vault Monorepo | Annihilation | Delete Init secrets | Gitlab | Include Variables
      ansible.builtin.include_vars:
        file: "{{ playbook_dir }}/vars/gitlab_artifacts.yml"

    - name: Vault Monorepo | Annihilation | Delete Init secrets | Gitlab | Delete
      no_log: "{{ vault_mono_debug_no_log }}"
      ansible.builtin.uri:
        url: "https://gitlab.com/api/v4/projects/\
          {{ vault_mono_gitlab_artifacts_project_id }}/variables/\
          {{ vault_mono_gitlab_artifacts_vault_cicd_variable_key_init_file }}"
        method: DELETE
        headers:
          "PRIVATE-TOKEN": "{{ lookup('ansible.builtin.file', vault_mono_prerequisite_local_file_gitlab_gl_prod_api_key) | trim }}"
        status_code:
          - 204
          - 404
      register: vault_mono_annihilation_tmp_gitlab_delete_init_secret_response
      changed_when: vault_mono_annihilation_tmp_gitlab_delete_init_secret_response.status == 204

- name: Vault Monorepo | Annihilation | Delete Teraaform Cloud Workspace
  block:
    - name: Vault Monorepo | Annihilation | Delete Teraaform Cloud Workspace | Get Backend config
      ansible.builtin.set_fact:
        vault_mono_annihilation_tmp_backend: "{{ lookup('hcl2json', \
          path=vault_mono_codified_vault_local_file_tfbackend) }}"

    - name: Vault Monorepo | Annihilation | Delete Teraaform Cloud Workspace | Delete
      no_log: "{{ vault_mono_debug_no_log }}"
      ansible.builtin.uri:
        method: DELETE
        url:
          "https://{{ vault_mono_tfe_hostname }}/api/v2/organizations/{{ vault_mono_tfe_org_name }}\
          /workspaces/{{ vault_mono_annihilation_tmp_backend.terraform.backend.remote.workspaces.name }}"
        status_code: 200, 404
        headers:
          Authorization: "Bearer {{ lookup('ansible.builtin.file', vault_mono_prerequisite_local_file_terraform_cloud_tf_prod_token) }}"
          content-type: "application/vnd.api+json"
      register: vault_mono_annihilation_tmp_tfe_cloud_delete
      changed_when: vault_mono_annihilation_tmp_tfe_cloud_delete.status == 200

- name: Vault Monorepo | Annihilation | Vault Install
  become: true
  delegate_to: "{{ vault_mono_server_ansible_inventory_name }}"
  block:
    - name: Vault Monorepo | Annihilation | Vault Install | Populate service facts
      ansible.builtin.service_facts:

    - name: Vault Monorepo | Annihilation | Vault Install | Stop Service
      ansible.builtin.service:
        name: "{{ vault_mono_install_systemd_service_name }}"
        state: stopped
        enabled: false
      when: >
        ansible_facts.services[vault_mono_install_systemd_service_name + '.service'] is defined
        and
        ansible_facts.services[vault_mono_install_systemd_service_name + '.service'] | length > 0

    - name: Vault Monorepo | Annihilation | Vault Install | Disable Vault Application Port
      community.general.ufw:
        rule: deny
        name: "{{ vault_mono_install_ufw_rule_name }}"
        state: enabled
        delete: true

    - name: Vault Monorepo | Annihilation | Vault Install | Delete User
      ansible.builtin.user:
        name: "{{ vault_mono_install_systemd_user }}"
        state: absent

    - name: Vault Monorepo | Annihilation | Vault Install | Delete Group
      ansible.builtin.user:
        name: "{{ vault_mono_install_systemd_group }}"
        state: absent

    - name: Vault Monorepo | Annihilation | Vault Install | Delete Files
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ vault_mono_install_systemd_service_file_loc }}"
        - "{{ vault_mono_install_ufw_application_rule_file_path }}"
        - "{{ vault_mono_tls_client_ca_file }}"
        - "{{ vault_mono_tls_key_file }}"
        - "{{ vault_mono_tls_cert_file }}"
        - "{{ vault_mono_tls_dir_path }}"
        - "{{ vault_mono_install_bin_file_path }}"
        - "{{ vault_mono_install_bin_dir_path }}"
        - "{{ vault_mono_install_env_file_path }}"
        - "{{ vault_mono_install_config_file_path }}"
        - "{{ vault_mono_install_config_dir_path }}"
        - "{{ vault_mono_install_data_dir_path }}"
        - "{{ vault_mono_install_tmp_dir_path }}"
        - "{{ vault_mono_install_path }}"

- name: Vault Monorepo | Annihilation | Delete Local Files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ vault_mono_local_file_client_chain_pkcs12_certificate }}"
    - "{{ vault_mono_local_file_client_chain_certificate }}"
    - "{{ vault_mono_local_file_client_certificate }}"
    - "{{ vault_mono_local_file_client_private_key }}"
    - "{{ vault_mono_mutual_tls_files_dir }}"
    - "{{ vault_mono_prerequisite_local_file_auth0_client_details }}"
    - "{{ vault_mono_prerequisite_local_file_terraform_cloud_tf_prod_token }}"
    - "{{ vault_mono_prerequisite_local_file_ansible_galaxy_api_key }}"
    - "{{ vault_mono_prerequisite_local_file_github_gh_prod_api_token }}"
    - "{{ vault_mono_prerequisite_local_file_gitlab_gl_prod_api_key }}"
    - "{{ vault_mono_prerequisite_local_file_root_ca_no_pass_private_key }}"
    - "{{ vault_mono_prerequisite_local_file_root_ca_passphrase_private_key }}"
    - "{{ vault_mono_prerequisite_local_file_root_ca_private_key }}"
    - "{{ vault_mono_prerequisite_local_file_linode_cli_prod_token }}"
    - "{{ vault_mono_prerequisite_local_file_openssh_nopass_private_key }}"
    - "{{ vault_mono_prerequisite_local_file_openssh_passphrase_private_key }}"
    - "{{ vault_mono_prerequisite_local_file_openssh_private_key }}"
    - "{{ vault_mono_prerequisite_files_dir }}"
    - "{{ vault_mono_local_file_vault_init_secrets }}"
    - "{{ vault_mono_local_tmp_files_dir }}"
